{"version":3,"sources":["images/about.jpg","Components/Homepage.js","Components/About.js","Components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","props","menuTogglerClasses","navClasses","startbarClasses","endbarClasses","show","push","unshift","className","join","onClick","changeClass","href","About","id","src","img","alt","class","Component","Skills","App","state","Open","contentClickHandler","setState","prevState","contentCloser","this","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,mC,2OCsC5BC,G,YAlCE,SAAAC,GACb,IAAIC,EAAqB,CAAC,gBACtBC,EAAa,CAAC,WACdC,EAAkB,CAAC,kBACnBC,EAAgB,CAAC,gBAOrB,OANGJ,EAAMK,OACLJ,EAAmBK,KAAK,QACxBJ,EAAWI,KAAK,QAChBH,EAAgBI,QAAQ,QACxBH,EAAcG,QAAQ,SAGtB,gCACI,yBAAKC,UAAWP,EAAmBQ,KAAK,KAAMC,QAAUV,EAAMW,aAC1D,yBAAKH,UAAWL,EAAgBM,KAAK,OACrC,yBAAKD,UAAU,QACf,yBAAKA,UAAWJ,EAAcK,KAAK,QAE3C,yBAAKD,UAAWN,EAAWO,KAAK,MAC5B,wBAAID,UAAU,YACV,4BAAI,uBAAGI,KAAK,IAAIJ,UAAU,YAAtB,UACJ,4BAAI,uBAAGI,KAAK,IAAIJ,UAAU,YAAtB,WACJ,4BAAI,uBAAGI,KAAK,IAAIJ,UAAU,YAAtB,aACJ,4BAAI,uBAAGI,KAAK,IAAIJ,UAAU,YAAtB,cAGZ,yBAAKA,UAAU,gBACX,4BAAI,kDACJ,6D,gBC5BSK,G,6KAEb,OACI,6BAASL,UAAU,QAAQM,GAAG,SAC1B,yBAAKN,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKO,IAAKC,IAAKC,IAAI,OAEvB,yBAAKT,UAAU,iBACX,yBAAKA,UAAU,iBACX,qCACA,uCAEJ,sCACQ,oDADR,kLAKA,yBAAKA,UAAU,gBACf,wBAAIA,UAAU,YACV,4BAAI,uBAAGI,KAAK,IAAIJ,UAAU,aAAY,uBAAGU,MAAM,mBAC/C,4BAAI,uBAAGN,KAAK,IAAIJ,UAAU,aAAY,uBAAGU,MAAM,qBAC/C,4BAAI,uBAAGN,KAAK,IAAIJ,UAAU,aAAY,uBAAGU,MAAM,8B,GAtBxCC,cCDdC,G,6KAEb,OACI,6BAASZ,UAAU,SAASM,GAAG,UAC3B,yBAAKN,UAAU,aACX,yBAAKA,UAAU,mBACX,uCAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,kBACf,uBAAGU,MAAM,kBAET,sCAEJ,yBAAKV,UAAU,SACX,yBAAKA,UAAU,kBACf,uBAAGU,MAAM,sBAET,2CAEJ,yBAAKV,UAAU,SACX,yBAAKA,UAAU,kBACf,uBAAGU,MAAM,iBAET,qCAEJ,yBAAKV,UAAU,SACX,yBAAKA,UAAU,kBACf,uBAAGU,MAAM,qBAET,oCAEJ,yBAAKV,UAAU,SACX,yBAAKA,UAAU,kBACX,uBAAGU,MAAM,mBAEb,wCAGR,yBAAKV,UAAU,kBACX,oH,GAzCYW,cCKfE,E,4MACnBC,MAAO,CACLC,MAAM,G,EAETC,oBAAsB,WACrB,EAAKC,UAAS,SAACC,GACb,MAAO,CAACH,MAAOG,EAAUH,U,EAG5BI,cAAgB,WACd,EAAKF,SAAS,CAACF,MAAM,K,uDAGpB,OACE,6BACE,kBAAC,EAAD,CAAUlB,KAAMuB,KAAKN,MAAMC,KAAMZ,YAAaiB,KAAKJ,sBACnD,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAjByBL,aCIbU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8fdba8bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.8a93a8a4.jpg\";","import React, { Component } from 'react';\r\nimport './Home-page.css';\r\n\r\n\r\nconst Homepage = props =>{\r\n    let menuTogglerClasses = ['menu-toggler'];\r\n    let navClasses = ['top-nav'];\r\n    let startbarClasses = ['bar half start'];\r\n    let endbarClasses = ['bar half end'];\r\n    if(props.show){\r\n        menuTogglerClasses.push('open');\r\n        navClasses.push('open');\r\n        startbarClasses.unshift('open');\r\n        endbarClasses.unshift('open');\r\n    }\r\n    return (\r\n        <header>\r\n            <div className={menuTogglerClasses.join(' ')} onClick= {props.changeClass}>\r\n                <div className={startbarClasses.join(' ')}></div>\r\n                <div className=\"bar\"></div>\r\n                <div className={endbarClasses.join(' ')}></div>\r\n            </div>\r\n        <nav className={navClasses.join(' ')}>\r\n            <ul className=\"nav-list\">\r\n                <li><a href=\"#\" className=\"nav-link\">about</a></li> \r\n                <li><a href=\"#\" className=\"nav-link\">skills</a></li>\r\n                <li><a href=\"#\" className=\"nav-link\">projects</a></li>\r\n                <li><a href=\"#\" className=\"nav-link\">contact</a></li>\r\n            </ul>\r\n        </nav>\r\n        <div className=\"landing-text\">\r\n            <h1><strong>Nagesh Martha</strong></h1>\r\n            <h5>Front End React Developer</h5>\r\n        </div>\r\n        </header>\r\n    )\r\n\r\n}\r\nexport default Homepage;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport img from '../images/about.jpg';\r\nimport './about.css';\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"about\" id=\"about\">\r\n                <div className=\"container\">\r\n                    <div className=\"profile-img\">\r\n                        <img src={img} alt=\" \"/>\r\n                    </div>\r\n                    <div className=\"about-details\">\r\n                        <div className=\"about-heading\">\r\n                            <h1>About</h1>\r\n                            <h5>Myself</h5>\r\n                        </div>\r\n                        <p>\r\n                        \"I am a <cite>Software Developer</cite> with over 5 years of experience in developing User Interface (UI)\r\n                         web applications using front End/user Interface technologies like JavaScript, React JS, Bootstrap \r\n                         and CSS.\"\r\n                        </p>\r\n                        <div className=\"social-media\">\r\n                        <ul className=\"nav-list\">\r\n                            <li><a href=\"#\" className=\"icon-link\"><i class=\"fa fa-github\"></i></a></li>\r\n                            <li><a href=\"#\" className=\"icon-link\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                            <li><a href=\"#\" className=\"icon-link\"><i class=\"fa fa-envelope\"></i></a></li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport  './skills.css';\r\n\r\nexport default class Skills extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"skills\" id=\"skills\">\r\n                <div className=\"container\">\r\n                    <div className=\"section-heading\">\r\n                        <h1>Skills</h1>\r\n                    </div>\r\n                    <div className=\"my-skills\">\r\n                        <div className=\"skill\">\r\n                            <div className=\"icon-container\">\r\n                            <i class=\"fab fa-react\"></i>\r\n                            </div>\r\n                            <h1>React</h1>\r\n                        </div>\r\n                        <div className=\"skill\">\r\n                            <div className=\"icon-container\">\r\n                            <i class=\"fab fa-js-square\"></i>\r\n                            </div>\r\n                            <h1>JavaScript</h1>\r\n                        </div>\r\n                        <div className=\"skill\">\r\n                            <div className=\"icon-container\">\r\n                            <i class=\"fas fa-code\"></i>\r\n                            </div>\r\n                            <h1>HTML</h1>\r\n                        </div>\r\n                        <div className=\"skill\">\r\n                            <div className=\"icon-container\">\r\n                            <i class=\"fab fa-css3-alt\"></i>\r\n                            </div>\r\n                            <h1>CSS</h1>\r\n                        </div>\r\n                        <div className=\"skill\">\r\n                            <div className=\"icon-container\">\r\n                                <i class=\"fab fa-github\"></i>\r\n                            </div>\r\n                            <h1>GitHub</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-footer\">\r\n                        <h5>Also include: Bootstrap, nodeJS, Express, Visual Studio and Styled-Components</h5>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Homepage from './Components/Homepage';\nimport About from './Components/About';\nimport Skills from './Components/Skills';\n\n\n\nexport default class App extends Component {\n  state= {\n    Open: false  \n  };\n contentClickHandler = ()=> {\n  this.setState((prevState)=>{\n    return {Open: !prevState.Open};\n  });\n };\n contentCloser = ()=>{\n   this.setState({Open: false});\n };\n  render() {\n    return (\n      <div>\n        <Homepage show={this.state.Open} changeClass={this.contentClickHandler}/>\n        <About />\n        <Skills />\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}